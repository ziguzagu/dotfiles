<!DOCTYPE html
    PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
 <title>/trunk/server/scripts/memcached-tool - memcached - Trac</title><link rel="start" href="/trac/memcached/wiki" /><link rel="search" href="/trac/memcached/search" /><link rel="help" href="/trac/memcached/wiki/TracGuide" /><link rel="stylesheet" href="/trac/memcached/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/trac/memcached/chrome/common/css/code.css" type="text/css" /><link rel="stylesheet" href="/trac/memcached/chrome/common/css/browser.css" type="text/css" /><link rel="icon" href="/trac/memcached/chrome/common/trac.ico" type="image/x-icon" /><link rel="shortcut icon" href="/trac/memcached/chrome/common/trac.ico" type="image/x-icon" /><link rel="up" href="/trac/memcached/browser/trunk/server/scripts" title="Parent directory" /><link rel="alternate" href="/trac/memcached/browser/trunk/server/scripts/memcached-tool?format=txt" title="Plain Text" type="text/plain" /><link rel="alternate" href="/trac/memcached/browser/trunk/server/scripts/memcached-tool?format=raw" title="Original Format" type="text/x-perl; charset=iso-8859-15" /><style type="text/css">
</style>
 <script type="text/javascript" src="/trac/memcached/chrome/common/js/trac.js"></script>
</head>
<body>


<div id="banner">

<div id="header"><a id="logo" href="http://example.org/"><img src="/trac/memcached/chrome/common/trac_banner.png" alt="" /></a><hr /></div>

<form id="search" action="/trac/memcached/search" method="get">
 <div>
  <label for="proj-search">Search:</label>
  <input type="text" id="proj-search" name="q" size="10" accesskey="f" value="" />
  <input type="submit" value="Search" />
  <input type="hidden" name="wiki" value="on" />
  <input type="hidden" name="changeset" value="on" />
  <input type="hidden" name="ticket" value="on" />
 </div>
</form>



<div id="metanav" class="nav"><ul><li class="first"><a href="/trac/memcached/settings">Settings</a></li><li class="last"><a href="/trac/memcached/about">About Trac</a></li></ul></div>
</div>

<div id="mainnav" class="nav"><ul><li class="first"><a accesskey="2" href="/trac/memcached/timeline">Timeline</a></li><li class="active"><a href="/trac/memcached/browser">Browse Source</a></li><li class="last"><a accesskey="4" href="/trac/memcached/search">Search</a></li></ul></div>
<div id="main">




<div id="ctxtnav" class="nav">
 <ul>
  <li class="first"><a href="/trac/memcached/changeset/628/trunk/server/scripts/memcached-tool">
   Last Change</a></li>
  <li class="last"><a href="/trac/memcached/log/trunk/server/scripts/memcached-tool">
   Revision Log</a></li>
 </ul>
</div>


<div id="searchable">
<div id="content" class="browser">
 <h1><a class="first" title="Go to root directory" href="/trac/memcached/browser">root</a><span class="sep">/</span><a title="View trunk" href="/trac/memcached/browser/trunk">trunk</a><span class="sep">/</span><a title="View server" href="/trac/memcached/browser/trunk/server">server</a><span class="sep">/</span><a title="View scripts" href="/trac/memcached/browser/trunk/server/scripts">scripts</a><span class="sep">/</span><a title="View memcached-tool" href="/trac/memcached/browser/trunk/server/scripts/memcached-tool">memcached-tool</a></h1>

 <div id="jumprev">
  <form action="" method="get">
   <div>
    <label for="rev">View revision:</label>
    <input type="text" id="rev" name="rev" value="" size="4" />
   </div>
  </form>
 </div>

 

 
  <table id="info" summary="Revision info"><tr>
    <th scope="col">
     Revision <a href="/trac/memcached/changeset/628">628</a>, 4.7 kB
     (checked in by sgrimm, 5 months ago)
    </th></tr><tr>
    <td class="message"><p>
Allow memcached-tool dump mode to output keys containing punctuation <br />
</p>
<p>
The regular expression that was being used to match a cache key was treating <br />
colons as word breaks, so it couldn't read keys of the form "type:id". <br />
</p>
</td>
   </tr><tr>
    <td colspan="2"><ul class="props">
      <li>Property <strong>svn:eol-style</strong> set to <em><code>native</code></em></li>
      <li>Property <strong>svn:executable</strong> set to <em><code>*</code></em></li>
      <li>Property <strong>svn:keywords</strong> set to <em><code>Author Date Id Revision</code></em></li>
    </ul></td></tr>
  </table>
  <div id="preview"><table class="code"><thead><tr><th class="lineno">Line</th><th class="content">&nbsp;</th></tr></thead><tbody><tr><th id="L1"><a href="#L1">1</a></th>
<td>#!/usr/bin/perl</td>
</tr><tr><th id="L2"><a href="#L2">2</a></th>
<td>#</td>
</tr><tr><th id="L3"><a href="#L3">3</a></th>
<td># memcached-tool:</td>
</tr><tr><th id="L4"><a href="#L4">4</a></th>
<td>#&nbsp; &nbsp;stats/management tool for memcached.</td>
</tr><tr><th id="L5"><a href="#L5">5</a></th>
<td>#</td>
</tr><tr><th id="L6"><a href="#L6">6</a></th>
<td># Author:</td>
</tr><tr><th id="L7"><a href="#L7">7</a></th>
<td>#&nbsp; &nbsp;Brad Fitzpatrick &lt;brad@danga.com&gt;</td>
</tr><tr><th id="L8"><a href="#L8">8</a></th>
<td>#</td>
</tr><tr><th id="L9"><a href="#L9">9</a></th>
<td># License:</td>
</tr><tr><th id="L10"><a href="#L10">10</a></th>
<td>#&nbsp; &nbsp;public domain.&nbsp; I give up all rights to this</td>
</tr><tr><th id="L11"><a href="#L11">11</a></th>
<td>#&nbsp; &nbsp;tool.&nbsp; modify and copy at will.</td>
</tr><tr><th id="L12"><a href="#L12">12</a></th>
<td>#</td>
</tr><tr><th id="L13"><a href="#L13">13</a></th>
<td></td>
</tr><tr><th id="L14"><a href="#L14">14</a></th>
<td>use strict;</td>
</tr><tr><th id="L15"><a href="#L15">15</a></th>
<td>use IO::Socket::INET;</td>
</tr><tr><th id="L16"><a href="#L16">16</a></th>
<td></td>
</tr><tr><th id="L17"><a href="#L17">17</a></th>
<td>my $host = shift;</td>
</tr><tr><th id="L18"><a href="#L18">18</a></th>
<td>my $mode = shift || &#34;display&#34;;</td>
</tr><tr><th id="L19"><a href="#L19">19</a></th>
<td>my ($from, $to);</td>
</tr><tr><th id="L20"><a href="#L20">20</a></th>
<td></td>
</tr><tr><th id="L21"><a href="#L21">21</a></th>
<td>if ($mode eq &#34;display&#34;) {</td>
</tr><tr><th id="L22"><a href="#L22">22</a></th>
<td>&nbsp; &nbsp; undef $mode if @ARGV;</td>
</tr><tr><th id="L23"><a href="#L23">23</a></th>
<td>} elsif ($mode eq &#34;move&#34;) {</td>
</tr><tr><th id="L24"><a href="#L24">24</a></th>
<td>&nbsp; &nbsp; $from = shift;</td>
</tr><tr><th id="L25"><a href="#L25">25</a></th>
<td>&nbsp; &nbsp; $to = shift;</td>
</tr><tr><th id="L26"><a href="#L26">26</a></th>
<td>&nbsp; &nbsp; undef $mode if $from &lt; 6 || $from &gt; 17;</td>
</tr><tr><th id="L27"><a href="#L27">27</a></th>
<td>&nbsp; &nbsp; undef $mode if $to&nbsp; &nbsp;&lt; 6 || $to&nbsp; &nbsp;&gt; 17;</td>
</tr><tr><th id="L28"><a href="#L28">28</a></th>
<td>&nbsp; &nbsp; print STDERR &#34;ERROR: parameters out of range\n\n&#34; unless $mode;</td>
</tr><tr><th id="L29"><a href="#L29">29</a></th>
<td>} elsif ($mode eq 'dump') {</td>
</tr><tr><th id="L30"><a href="#L30">30</a></th>
<td>&nbsp; &nbsp; ;</td>
</tr><tr><th id="L31"><a href="#L31">31</a></th>
<td>} elsif ($mode eq 'stats') {</td>
</tr><tr><th id="L32"><a href="#L32">32</a></th>
<td>&nbsp; &nbsp; ;</td>
</tr><tr><th id="L33"><a href="#L33">33</a></th>
<td>} else {</td>
</tr><tr><th id="L34"><a href="#L34">34</a></th>
<td>&nbsp; &nbsp; undef $mode;</td>
</tr><tr><th id="L35"><a href="#L35">35</a></th>
<td>}</td>
</tr><tr><th id="L36"><a href="#L36">36</a></th>
<td></td>
</tr><tr><th id="L37"><a href="#L37">37</a></th>
<td>undef $mode if @ARGV;</td>
</tr><tr><th id="L38"><a href="#L38">38</a></th>
<td></td>
</tr><tr><th id="L39"><a href="#L39">39</a></th>
<td>die </td>
</tr><tr><th id="L40"><a href="#L40">40</a></th>
<td>&#34;Usage: memcached-tool &lt;host[:port]&gt; [mode]\n</td>
</tr><tr><th id="L41"><a href="#L41">41</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp;memcached-tool 10.0.0.5:11211 display&nbsp; &nbsp; # shows slabs</td>
</tr><tr><th id="L42"><a href="#L42">42</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp;memcached-tool 10.0.0.5:11211&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # same.&nbsp; (default is display)</td>
</tr><tr><th id="L43"><a href="#L43">43</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp;memcached-tool 10.0.0.5:11211 stats&nbsp; &nbsp; &nbsp; # shows general stats</td>
</tr><tr><th id="L44"><a href="#L44">44</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp;memcached-tool 10.0.0.5:11211 move 7 9&nbsp; &nbsp;# takes 1MB slab from class #7</td>
</tr><tr><th id="L45"><a href="#L45">45</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # to class #9.</td>
</tr><tr><th id="L46"><a href="#L46">46</a></th>
<td></td>
</tr><tr><th id="L47"><a href="#L47">47</a></th>
<td>You can only move slabs around once memory is totally allocated, and only</td>
</tr><tr><th id="L48"><a href="#L48">48</a></th>
<td>once the target class is full.&nbsp; (So you can't move from #6 to #9 and #7</td>
</tr><tr><th id="L49"><a href="#L49">49</a></th>
<td>to #9 at the same itme, since you'd have to wait for #9 to fill from</td>
</tr><tr><th id="L50"><a href="#L50">50</a></th>
<td>the first reassigned page)</td>
</tr><tr><th id="L51"><a href="#L51">51</a></th>
<td>&#34; unless $host &amp;&amp; $mode;</td>
</tr><tr><th id="L52"><a href="#L52">52</a></th>
<td></td>
</tr><tr><th id="L53"><a href="#L53">53</a></th>
<td>$host .= &#34;:11211&#34; unless $host =~ /:\d+/;</td>
</tr><tr><th id="L54"><a href="#L54">54</a></th>
<td></td>
</tr><tr><th id="L55"><a href="#L55">55</a></th>
<td>my $sock = IO::Socket::INET-&gt;new(PeerAddr =&gt; $host,</td>
</tr><tr><th id="L56"><a href="#L56">56</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Proto&nbsp; &nbsp; =&gt; 'tcp');</td>
</tr><tr><th id="L57"><a href="#L57">57</a></th>
<td>die &#34;Couldn't connect to $host\n&#34; unless $sock;</td>
</tr><tr><th id="L58"><a href="#L58">58</a></th>
<td></td>
</tr><tr><th id="L59"><a href="#L59">59</a></th>
<td></td>
</tr><tr><th id="L60"><a href="#L60">60</a></th>
<td>if ($mode eq &#34;move&#34;) {</td>
</tr><tr><th id="L61"><a href="#L61">61</a></th>
<td>&nbsp; &nbsp; my $tries = 0;</td>
</tr><tr><th id="L62"><a href="#L62">62</a></th>
<td>&nbsp; &nbsp; while (1) {</td>
</tr><tr><th id="L63"><a href="#L63">63</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; print $sock &#34;slabs reassign $from $to\r\n&#34;;</td>
</tr><tr><th id="L64"><a href="#L64">64</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; my $res = &lt;$sock&gt;;</td>
</tr><tr><th id="L65"><a href="#L65">65</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; $res =~ s/\s+//;</td>
</tr><tr><th id="L66"><a href="#L66">66</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; if ($res eq &#34;DONE&#34;) {</td>
</tr><tr><th id="L67"><a href="#L67">67</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print &#34;Success.\n&#34;;</td>
</tr><tr><th id="L68"><a href="#L68">68</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; exit 0;</td>
</tr><tr><th id="L69"><a href="#L69">69</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; } elsif ($res eq &#34;CANT&#34;) {</td>
</tr><tr><th id="L70"><a href="#L70">70</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print &#34;Error: can't move from $from to $to.&nbsp; Destination not yet full?&nbsp; See usage docs.\n&#34;;</td>
</tr><tr><th id="L71"><a href="#L71">71</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; exit;</td>
</tr><tr><th id="L72"><a href="#L72">72</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; } elsif ($res eq &#34;BUSY&#34;) {</td>
</tr><tr><th id="L73"><a href="#L73">73</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (++$tries == 3) {</td>
</tr><tr><th id="L74"><a href="#L74">74</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print &#34;Failed to move after 3 tries.&nbsp; Try again later.\n&#34;;</td>
</tr><tr><th id="L75"><a href="#L75">75</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; exit;</td>
</tr><tr><th id="L76"><a href="#L76">76</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</td>
</tr><tr><th id="L77"><a href="#L77">77</a></th>
<td></td>
</tr><tr><th id="L78"><a href="#L78">78</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print &#34;Page busy, retrying...\n&#34;;</td>
</tr><tr><th id="L79"><a href="#L79">79</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sleep 1;</td>
</tr><tr><th id="L80"><a href="#L80">80</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; }</td>
</tr><tr><th id="L81"><a href="#L81">81</a></th>
<td>&nbsp; &nbsp; }</td>
</tr><tr><th id="L82"><a href="#L82">82</a></th>
<td></td>
</tr><tr><th id="L83"><a href="#L83">83</a></th>
<td>&nbsp; &nbsp; exit;</td>
</tr><tr><th id="L84"><a href="#L84">84</a></th>
<td>}</td>
</tr><tr><th id="L85"><a href="#L85">85</a></th>
<td></td>
</tr><tr><th id="L86"><a href="#L86">86</a></th>
<td>if ($mode eq 'dump') {</td>
</tr><tr><th id="L87"><a href="#L87">87</a></th>
<td>&nbsp; &nbsp; my %items;</td>
</tr><tr><th id="L88"><a href="#L88">88</a></th>
<td>&nbsp; &nbsp; my $totalitems;</td>
</tr><tr><th id="L89"><a href="#L89">89</a></th>
<td></td>
</tr><tr><th id="L90"><a href="#L90">90</a></th>
<td>&nbsp; &nbsp; print $sock &#34;stats items\r\n&#34;;</td>
</tr><tr><th id="L91"><a href="#L91">91</a></th>
<td></td>
</tr><tr><th id="L92"><a href="#L92">92</a></th>
<td>&nbsp; &nbsp; while (&lt;$sock&gt;) {</td>
</tr><tr><th id="L93"><a href="#L93">93</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; last if /^END/;</td>
</tr><tr><th id="L94"><a href="#L94">94</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; if (/^STAT items:(\d*):number (\d*)/) {</td>
</tr><tr><th id="L95"><a href="#L95">95</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $items{$1} = $2;</td>
</tr><tr><th id="L96"><a href="#L96">96</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $totalitems += $2;</td>
</tr><tr><th id="L97"><a href="#L97">97</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; }</td>
</tr><tr><th id="L98"><a href="#L98">98</a></th>
<td>&nbsp; &nbsp; }</td>
</tr><tr><th id="L99"><a href="#L99">99</a></th>
<td>&nbsp; &nbsp; print STDERR &#34;Dumping memcache contents\n&#34;;</td>
</tr><tr><th id="L100"><a href="#L100">100</a></th>
<td>&nbsp; &nbsp; print STDERR &#34;&nbsp; Number of buckets: &#34; . scalar(keys(%items)) . &#34;\n&#34;;</td>
</tr><tr><th id="L101"><a href="#L101">101</a></th>
<td>&nbsp; &nbsp; print STDERR &#34;&nbsp; Number of items&nbsp; : $totalitems\n&#34;;</td>
</tr><tr><th id="L102"><a href="#L102">102</a></th>
<td></td>
</tr><tr><th id="L103"><a href="#L103">103</a></th>
<td>&nbsp; &nbsp; foreach my $bucket (sort(keys(%items))) {</td>
</tr><tr><th id="L104"><a href="#L104">104</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; print STDERR &#34;Dumping bucket $bucket - &#34; . $items{$bucket} . &#34; total items\n&#34;;</td>
</tr><tr><th id="L105"><a href="#L105">105</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; print $sock &#34;stats cachedump $bucket $items{$bucket} 1\r\n&#34;;</td>
</tr><tr><th id="L106"><a href="#L106">106</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; my %keyexp;</td>
</tr><tr><th id="L107"><a href="#L107">107</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; while (&lt;$sock&gt;) {</td>
</tr><tr><th id="L108"><a href="#L108">108</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; last if /^END/;</td>
</tr><tr><th id="L109"><a href="#L109">109</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # return format looks like this</td>
</tr><tr><th id="L110"><a href="#L110">110</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # ITEM foo [6 b; 1176415152 s]</td>
</tr><tr><th id="L111"><a href="#L111">111</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (/^ITEM (\S+) \[.* (\d+) s\]/) {</td>
</tr><tr><th id="L112"><a href="#L112">112</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $keyexp{$1} = $2;</td>
</tr><tr><th id="L113"><a href="#L113">113</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</td>
</tr><tr><th id="L114"><a href="#L114">114</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; }</td>
</tr><tr><th id="L115"><a href="#L115">115</a></th>
<td></td>
</tr><tr><th id="L116"><a href="#L116">116</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; foreach my $k (keys(%keyexp)) {</td>
</tr><tr><th id="L117"><a href="#L117">117</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; my $val;</td>
</tr><tr><th id="L118"><a href="#L118">118</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print $sock &#34;get $k\r\n&#34;;</td>
</tr><tr><th id="L119"><a href="#L119">119</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; my $response = &lt;$sock&gt;;</td>
</tr><tr><th id="L120"><a href="#L120">120</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $response =~ /VALUE (\S+) (\d+) (\d+)/;</td>
</tr><tr><th id="L121"><a href="#L121">121</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; my $flags = $2;</td>
</tr><tr><th id="L122"><a href="#L122">122</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; my $len = $3;</td>
</tr><tr><th id="L123"><a href="#L123">123</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; read $sock, $val , $len;</td>
</tr><tr><th id="L124"><a href="#L124">124</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # get the END</td>
</tr><tr><th id="L125"><a href="#L125">125</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $_ = &lt;$sock&gt;;</td>
</tr><tr><th id="L126"><a href="#L126">126</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $_ = &lt;$sock&gt;;</td>
</tr><tr><th id="L127"><a href="#L127">127</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print &#34;add $k $flags $keyexp{$k} $len\r\n$val\r\n&#34;;</td>
</tr><tr><th id="L128"><a href="#L128">128</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; }</td>
</tr><tr><th id="L129"><a href="#L129">129</a></th>
<td>&nbsp; &nbsp; }</td>
</tr><tr><th id="L130"><a href="#L130">130</a></th>
<td>&nbsp; &nbsp; exit;</td>
</tr><tr><th id="L131"><a href="#L131">131</a></th>
<td>}</td>
</tr><tr><th id="L132"><a href="#L132">132</a></th>
<td></td>
</tr><tr><th id="L133"><a href="#L133">133</a></th>
<td>if ($mode eq 'stats') {</td>
</tr><tr><th id="L134"><a href="#L134">134</a></th>
<td>&nbsp; &nbsp; my %items;</td>
</tr><tr><th id="L135"><a href="#L135">135</a></th>
<td></td>
</tr><tr><th id="L136"><a href="#L136">136</a></th>
<td>&nbsp; &nbsp; print $sock &#34;stats\r\n&#34;;</td>
</tr><tr><th id="L137"><a href="#L137">137</a></th>
<td></td>
</tr><tr><th id="L138"><a href="#L138">138</a></th>
<td>&nbsp; &nbsp; while (&lt;$sock&gt;) {</td>
</tr><tr><th id="L139"><a href="#L139">139</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; last if /^END/;</td>
</tr><tr><th id="L140"><a href="#L140">140</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; chomp;</td>
</tr><tr><th id="L141"><a href="#L141">141</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; if (/^STAT\s+(\S*)\s+(.*)/) {</td>
</tr><tr><th id="L142"><a href="#L142">142</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $items{$1} = $2;</td>
</tr><tr><th id="L143"><a href="#L143">143</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; }</td>
</tr><tr><th id="L144"><a href="#L144">144</a></th>
<td>&nbsp; &nbsp; }</td>
</tr><tr><th id="L145"><a href="#L145">145</a></th>
<td>&nbsp; &nbsp; printf (&#34;#%-17s %5s %11s\n&#34;, $host, &#34;Field&#34;, &#34;Value&#34;);</td>
</tr><tr><th id="L146"><a href="#L146">146</a></th>
<td>&nbsp; &nbsp; foreach my $name (sort(keys(%items))) {</td>
</tr><tr><th id="L147"><a href="#L147">147</a></th>
<td>&nbsp; &nbsp; &nbsp; printf (&#34;%24s %12s\n&#34;, $name, $items{$name});</td>
</tr><tr><th id="L148"><a href="#L148">148</a></th>
<td>&nbsp; &nbsp; &nbsp; </td>
</tr><tr><th id="L149"><a href="#L149">149</a></th>
<td>&nbsp; &nbsp; }</td>
</tr><tr><th id="L150"><a href="#L150">150</a></th>
<td>&nbsp; &nbsp; exit;</td>
</tr><tr><th id="L151"><a href="#L151">151</a></th>
<td>}</td>
</tr><tr><th id="L152"><a href="#L152">152</a></th>
<td></td>
</tr><tr><th id="L153"><a href="#L153">153</a></th>
<td># display mode:</td>
</tr><tr><th id="L154"><a href="#L154">154</a></th>
<td></td>
</tr><tr><th id="L155"><a href="#L155">155</a></th>
<td>my %items;&nbsp; # class -&gt; { number, age, chunk_size, chunks_per_page,</td>
</tr><tr><th id="L156"><a href="#L156">156</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; total_pages, total_chunks, used_chunks,</td>
</tr><tr><th id="L157"><a href="#L157">157</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free_chunks, free_chunks_end }</td>
</tr><tr><th id="L158"><a href="#L158">158</a></th>
<td></td>
</tr><tr><th id="L159"><a href="#L159">159</a></th>
<td>print $sock &#34;stats items\r\n&#34;;</td>
</tr><tr><th id="L160"><a href="#L160">160</a></th>
<td>while (&lt;$sock&gt;) {</td>
</tr><tr><th id="L161"><a href="#L161">161</a></th>
<td>&nbsp; &nbsp; last if /^END/;</td>
</tr><tr><th id="L162"><a href="#L162">162</a></th>
<td>&nbsp; &nbsp; if (/^STAT items:(\d+):(\w+) (\d+)/) {</td>
</tr><tr><th id="L163"><a href="#L163">163</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; $items{$1}{$2} = $3;</td>
</tr><tr><th id="L164"><a href="#L164">164</a></th>
<td>&nbsp; &nbsp; }</td>
</tr><tr><th id="L165"><a href="#L165">165</a></th>
<td>}</td>
</tr><tr><th id="L166"><a href="#L166">166</a></th>
<td></td>
</tr><tr><th id="L167"><a href="#L167">167</a></th>
<td>print $sock &#34;stats slabs\r\n&#34;;</td>
</tr><tr><th id="L168"><a href="#L168">168</a></th>
<td>while (&lt;$sock&gt;) {</td>
</tr><tr><th id="L169"><a href="#L169">169</a></th>
<td>&nbsp; &nbsp; last if /^END/;</td>
</tr><tr><th id="L170"><a href="#L170">170</a></th>
<td>&nbsp; &nbsp; if (/^STAT (\d+):(\w+) (\d+)/) {</td>
</tr><tr><th id="L171"><a href="#L171">171</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; $items{$1}{$2} = $3;</td>
</tr><tr><th id="L172"><a href="#L172">172</a></th>
<td>&nbsp; &nbsp; }</td>
</tr><tr><th id="L173"><a href="#L173">173</a></th>
<td>}</td>
</tr><tr><th id="L174"><a href="#L174">174</a></th>
<td></td>
</tr><tr><th id="L175"><a href="#L175">175</a></th>
<td>print &#34;&nbsp; #&nbsp; Item_Size&nbsp; &nbsp;Max_age&nbsp; 1MB_pages Count&nbsp; &nbsp;Full?\n&#34;;</td>
</tr><tr><th id="L176"><a href="#L176">176</a></th>
<td>foreach my $n (1..40) {</td>
</tr><tr><th id="L177"><a href="#L177">177</a></th>
<td>&nbsp; &nbsp; my $it = $items{$n};</td>
</tr><tr><th id="L178"><a href="#L178">178</a></th>
<td>&nbsp; &nbsp; next if (0 == $it-&gt;{total_pages});</td>
</tr><tr><th id="L179"><a href="#L179">179</a></th>
<td>&nbsp; &nbsp; my $size = $it-&gt;{chunk_size} &lt; 1024 ? &#34;$it-&gt;{chunk_size} B &#34; : </td>
</tr><tr><th id="L180"><a href="#L180">180</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; sprintf(&#34;%.1f kB&#34;, $it-&gt;{chunk_size} / 1024.0);</td>
</tr><tr><th id="L181"><a href="#L181">181</a></th>
<td>&nbsp; &nbsp; my $full = $it-&gt;{free_chunks_end} == 0 ? &#34;yes&#34; : &#34; no&#34;;</td>
</tr><tr><th id="L182"><a href="#L182">182</a></th>
<td>&nbsp; &nbsp; printf &#34;%3d&nbsp; &nbsp;%8s %7d s %7d %7d %7s\n&#34;,</td>
</tr><tr><th id="L183"><a href="#L183">183</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $n, $size, $it-&gt;{age}, $it-&gt;{total_pages},</td>
</tr><tr><th id="L184"><a href="#L184">184</a></th>
<td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $it-&gt;{number}, $full;</td>
</tr><tr><th id="L185"><a href="#L185">185</a></th>
<td>}</td>
</tr><tr><th id="L186"><a href="#L186">186</a></th>
<td></td>
</tr></tbody></table>
  </div>

 <div id="help">
  <strong>Note:</strong> See <a href="/trac/memcached/wiki/TracBrowser">TracBrowser</a> for help on using the browser.
 </div>

  <div id="anydiff">
   <form action="/trac/memcached/anydiff" method="get">
    <div class="buttons">
     <input type="hidden" name="new_path" value="/trunk/server/scripts/memcached-tool" />
     <input type="hidden" name="old_path" value="/trunk/server/scripts/memcached-tool" />
     <input type="hidden" name="new_rev" value="" />
     <input type="hidden" name="old_rev" value="" />
     <input type="submit" value="View changes..." title="Prepare an Arbitrary Diff" />
    </div>
   </form>
  </div>

</div>
</div>
<script type="text/javascript">searchHighlight()</script>
<div id="altlinks"><h3>Download in other formats:</h3><ul><li class="first"><a href="/trac/memcached/browser/trunk/server/scripts/memcached-tool?format=txt">Plain Text</a></li><li class="last"><a href="/trac/memcached/browser/trunk/server/scripts/memcached-tool?format=raw">Original Format</a></li></ul></div>

</div>

<div id="footer">
 <hr />
 <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/trac/memcached/chrome/common/trac_logo_mini.png" height="30" width="107"
   alt="Trac Powered"/></a>
 <p class="left">
  Powered by <a href="/trac/memcached/about"><strong>Trac 0.10.4</strong></a><br />
  By <a href="http://www.edgewall.org/">Edgewall Software</a>.
 </p>
 <p class="right">
  Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a>
 </p>
</div>



 </body>
</html>

