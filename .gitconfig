## -*- mode: conf -*-
[user]
name = ziguzagu
email = ziguzagu@gmail.com

[color]
ui = auto

[color "diff"]
meta = yellow
frag = blue bold
whitespace = white bold reverse

[color "status"]
untracked = blue bold

[color "branch"]
current = green bold
local = yellow
remote = magenta

[color "grep"]
filename   = green
linenumber = blue bold
function   = cyan
match      = red ul

[core]
excludesfile = ~/.gitignore
whitespace   = trailing-space
pager        = less -FX

[pager]
log  = diff-highlight | less -FX
show = diff-highlight | less -FX
diff = diff-highlight | less -FX

[alias]
up = pull --rebase
di = diff
dc = diff --cached
ci = commit -v
st = status -sb
co = checkout
pick = cherry-pick
br = branch
hist = log --graph --pretty=format:'%C(yellow bold)%h%C(cyan)%d%Creset %s %C(black bold)(%ci)%Creset' --decorate
last = log -1 HEAD
info = config --get remote.origin.url
upstream = "!sh -c 'git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null'"
remaster = "!sh -c 'branch=`git rev-parse --abbrev-ref HEAD` && git co master && git pull origin master && git co $branch && git rebase master'"
ag  = grep --heading --break --line-number --color --show-function
setup-pr = "config --add remote.origin.fetch +refs/pull/*/head:refs/remotes/origin/pr/*"
find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
find-pr = "!sh -c 'merge=`git find-merge $0` && pr=$(git log -1 --format=%B $merge | perl -lne \"/#(\\d+)/ && print \\$1\") && open `hub browse -u`/pull/$pr'"

## for hub
web = "!sh -c 'branch=`git rev-parse --abbrev-ref HEAD` && if [ $branch == 'master' ]; then hub browse; else hub browse -- pull/$branch; fi'"
pr  = pull-request

[push]
default = current

[include]
path = .gitconfig.local

[ghq]
root = ~/src

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
